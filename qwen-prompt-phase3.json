{
  "metadata": {
    "session_id": "phase-3-testing-parallel-2025-10-12",
    "created_by": "Claude",
    "assigned_to": "QWEN",
    "purpose": "Phase 3: Performance testing & monitoring (PARALLEL with Claude/Gemini - NO conflicts)",
    "estimated_duration": "3-4 hours",
    "phase": "3-redis-caching",
    "version": "3.0-parallel-execution",
    "parallel_work": "✅ SAFE: You create ONLY scripts/tests, Claude handles backend, Gemini handles frontend"
  },

  "CRITICAL_INSTRUCTIONS": {
    "task_type": "TESTING & MONITORING ONLY - ZERO CODE MODIFICATIONS",
    "parallel_safety": "Complete isolation: create scripts in backend/scripts/, never modify src/",
    "allowed_operations": [
      "Create test scripts in backend/scripts/",
      "Run performance tests",
      "Write documentation in claudedocs/",
      "Execute read-only database queries"
    ],
    "forbidden_operations": [
      "Modify backend/src/**/*",
      "Modify frontend/**/*",
      "Run migrations",
      "Delete or truncate database tables"
    ],
    "validation": "All scripts must be reviewed by Claude before execution",
    "coordination": "Report completion when done, no intermediate sync needed"
  },

  "MANDATORY_BRAIN_REFERENCES": {
    "read_first": [
      "brain/api_endpoints_reference.json → Endpoint paths for testing",
      "brain/sdd_system.json → System architecture",
      "backend/database-analysis/ → Performance baseline data"
    ]
  },

  "TASKS": [
    {
      "task_id": "Q1",
      "title": "Redis Performance Monitoring Script",
      "estimated_hours": 1.5,
      "priority": "HIGH",

      "objective": "Create real-time monitoring script for Redis cache effectiveness",

      "deliverable": "backend/scripts/monitor-redis-performance.sh",

      "script_requirements": {
        "metrics_to_capture": [
          "Cache hit rate (hits / total requests)",
          "Cache miss rate",
          "Average response time (cached vs uncached)",
          "Memory usage",
          "Keys count by pattern (events:*, venues:*, articles:*)"
        ],
        "output_format": "JSON for easy parsing",
        "update_interval": "Every 5 seconds",
        "duration": "Run for 60 seconds total"
      },

      "script_template": "#!/bin/bash\n# Redis Performance Monitor\n\nfor i in {1..12}; do\n  redis-cli INFO stats | grep -E 'keyspace_hits|keyspace_misses'\n  redis-cli DBSIZE\n  redis-cli MEMORY USAGE events:list:public:::::10:0\n  sleep 5\ndone",

      "validation_checklist": [
        "✓ Script is executable (chmod +x)",
        "✓ Outputs valid JSON",
        "✓ Runs without errors",
        "✓ Captures all required metrics",
        "✓ Safe to run in production"
      ]
    },

    {
      "task_id": "Q2",
      "title": "Cache vs No-Cache Performance Comparison",
      "estimated_hours": 1,
      "priority": "HIGH",

      "objective": "Script that compares response times with and without Redis cache",

      "deliverable": "backend/scripts/compare-cache-performance.sh",

      "test_scenarios": {
        "cold_cache": "First request (cache miss) - measure full database query time",
        "warm_cache": "Second request (cache hit) - measure Redis retrieval time",
        "stale_cache": "Request after TTL expiry - measure revalidation time"
      },

      "script_template": "#!/bin/bash\n# Cache Performance Comparison\n\necho \"Testing /api/events endpoint\"\n\n# Cold cache (first request)\ntime1=$(curl -o /dev/null -s -w '%{time_total}' http://localhost:3000/api/events?dateRange=today)\necho \"Cold cache: ${time1}s\"\n\n# Warm cache (second request)\ntime2=$(curl -o /dev/null -s -w '%{time_total}' http://localhost:3000/api/events?dateRange=today)\necho \"Warm cache: ${time2}s\"\n\n# Calculate improvement\necho \"Improvement: $(echo \"scale=2; (($time1 - $time2) / $time1) * 100\" | bc)%\"",

      "validation_checklist": [
        "✓ Tests all major endpoints (events, venues, articles, galleras)",
        "✓ Reports response times accurately",
        "✓ Calculates performance improvement percentage",
        "✓ Handles errors gracefully",
        "✓ Creates summary report in JSON"
      ]
    },

    {
      "task_id": "Q3",
      "title": "Phase 3 Performance Report",
      "estimated_hours": 0.5,
      "priority": "MEDIUM",

      "objective": "Comprehensive documentation of Phase 3 performance improvements",

      "deliverable": "claudedocs/QWEN_PHASE3_PERFORMANCE_REPORT.md",

      "report_sections": [
        "## Executive Summary",
        "## Test Environment",
        "## Baseline vs Optimized Performance",
        "## Cache Hit Rate Analysis",
        "## Response Time Improvements",
        "## Cost Savings Estimate",
        "## Recommendations"
      ],

      "required_metrics": {
        "before_phase3": "From backend/database-analysis/ (255ms avg)",
        "after_phase3": "From your testing scripts",
        "cache_hit_rate": "Target: 75-85%",
        "cost_savings": "Estimated based on query reduction"
      },

      "validation_checklist": [
        "✓ All metrics included with sources",
        "✓ Comparison charts/tables present",
        "✓ Cost savings calculation explained",
        "✓ Recommendations are actionable",
        "✓ No sensitive data exposed"
      ]
    }
  ],

  "SCRIPT_SAFETY_GUIDELINES": {
    "before_creating_script": [
      "1. Verify script only reads data (no writes)",
      "2. Check Claude approved the approach",
      "3. Test on localhost first",
      "4. Validate output format"
    ],
    "forbidden_commands": [
      "DROP",
      "DELETE",
      "TRUNCATE",
      "ALTER TABLE",
      "redis-cli FLUSHALL",
      "redis-cli FLUSHDB",
      "rm -rf"
    ],
    "allowed_commands": [
      "curl (GET requests only)",
      "redis-cli INFO",
      "redis-cli DBSIZE",
      "redis-cli MEMORY USAGE",
      "psql with SELECT queries only"
    ]
  },

  "COORDINATION_CHECKPOINTS": {
    "no_sync_needed": "Work independently, report when all 3 tasks complete",
    "final_validation": "Claude will review your scripts and report",
    "parallel_safety": "Zero conflicts - you create scripts/, Claude modifies src/"
  },

  "SUCCESS_CRITERIA": {
    "functional": "Scripts run successfully and produce accurate metrics",
    "documentation": "Report clearly shows Phase 3 performance improvements",
    "safety": "No destructive operations, all scripts are read-only",
    "usefulness": "Scripts can be reused for future monitoring"
  }
}
