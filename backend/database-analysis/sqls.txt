1. CURRENT_TABLES.json

SELECT 
    t.table_name,
    c.column_name,
    c.data_type,
    c.character_maximum_length,
    c.is_nullable,
    c.column_default,
    c.ordinal_position
FROM information_schema.tables t
JOIN information_schema.columns c ON t.table_name = c.table_name
WHERE t.table_schema = 'public'
    AND t.table_type = 'BASE TABLE'
ORDER BY t.table_name, c.ordinal_position;

2. CURRENT_FOREIGN_KEYS.json

SELECT 
    tc.constraint_name,
    tc.table_name,
    kcu.column_name,
    ccu.table_name AS foreign_table_name,
    ccu.column_name AS foreign_column_name,
    rc.update_rule,
    rc.delete_rule
FROM information_schema.table_constraints tc
JOIN information_schema.key_column_usage kcu 
    ON tc.constraint_name = kcu.constraint_name
JOIN information_schema.constraint_column_usage ccu 
    ON ccu.constraint_name = tc.constraint_name
JOIN information_schema.referential_constraints rc 
    ON tc.constraint_name = rc.constraint_name
WHERE tc.constraint_type = 'FOREIGN KEY'
    AND tc.table_schema = 'public'
ORDER BY tc.table_name, tc.constraint_name;

3. CURRENT_INDEXES.json

SELECT 
    schemaname,
    tablename,
    indexname,
    indexdef,
    CASE WHEN indexdef LIKE '%UNIQUE%' THEN true ELSE false END as is_unique,
    CASE WHEN indexdef LIKE '%btree%' THEN 'btree'
         WHEN indexdef LIKE '%hash%' THEN 'hash'
         WHEN indexdef LIKE '%gin%' THEN 'gin'
         WHEN indexdef LIKE '%gist%' THEN 'gist'
         ELSE 'other' END as index_type
FROM pg_indexes 
WHERE schemaname = 'public'
ORDER BY tablename, indexname;

4. CURRENT_ENUMS.json

SELECT 
    t.typname as enum_name,
    array_agg(e.enumlabel ORDER BY e.enumsortorder) as enum_values
FROM pg_type t 
JOIN pg_enum e ON t.oid = e.enumtypid  
JOIN pg_namespace n ON n.oid = t.typnamespace
WHERE n.nspname = 'public'
GROUP BY t.typname
ORDER BY t.typname;

5. CURRENT_CONSTRAINTS.json

SELECT 
    tc.constraint_name,
    tc.table_name,
    tc.constraint_type,
    STRING_AGG(kcu.column_name, ', ' ORDER BY kcu.ordinal_position) as column_names,
    cc.check_clause
FROM information_schema.table_constraints tc
LEFT JOIN information_schema.key_column_usage kcu 
    ON tc.constraint_name = kcu.constraint_name
LEFT JOIN information_schema.check_constraints cc 
    ON tc.constraint_name = cc.constraint_name
WHERE tc.table_schema = 'public'
    AND tc.constraint_type IN ('PRIMARY KEY', 'UNIQUE', 'CHECK')
GROUP BY tc.constraint_name, tc.table_name, tc.constraint_type, cc.check_clause
ORDER BY tc.table_name, tc.constraint_type;

6. DATABASE_STATS.json

-- Estadísticas de tablas
SELECT 
    schemaname,
    tablename,
    attname as column_name,
    n_distinct,
    most_common_vals,
    most_common_freqs,
    correlation
FROM pg_stats 
WHERE schemaname = 'public'
ORDER BY tablename, attname;

7. Información adicional del sistema (contexto)

-- 1. Versión de Postgres

SELECT version() as postgres_version;

-- 2. Tamaño de la base de datos  

SELECT pg_size_pretty(pg_database_size(current_database())) as database_size;

-- 3. Información de columnas con estadísticas (alternativo a pg_stats)

SELECT 
    table_schema,
    table_name,
    column_name,
    data_type,
    is_nullable,
    column_default
FROM information_schema.columns 
WHERE table_schema = 'public'
ORDER BY table_name, ordinal_position;

-- 4. Conteo de registros estimado por tabla

SELECT 
    schemaname,
    relname as tablename,
    n_tup_ins as total_inserts,
    n_tup_upd as total_updates,
    n_tup_del as total_deletes,
    n_live_tup as current_rows,
    n_dead_tup as dead_rows,
    last_vacuum,
    last_autovacuum,
    last_analyze,
    last_autoanalyze
FROM pg_stat_user_tables 
ORDER BY relname;

-- 5. Tamaños de tablas individuales

SELECT 
    schemaname,
    tablename,
    pg_size_pretty(pg_total_relation_size(schemaname||'.'||tablename)) as total_size,
    pg_size_pretty(pg_relation_size(schemaname||'.'||tablename)) as table_size
FROM pg_tables 
WHERE schemaname = 'public'
ORDER BY pg_total_relation_size(schemaname||'.'||tablename) DESC;

-- Investigar qué campos se actualizan frecuentemente
SELECT 
    schemaname,
    tablename,
    attname,
    n_distinct,
    most_common_vals
FROM pg_stats 
WHERE tablename = 'users' 
ORDER BY attname;

-- Ver actividad reciente en users
SELECT 
    n_tup_ins,
    n_tup_upd,
    n_tup_del,
    last_vacuum,
    last_autovacuum,
    last_analyze
FROM pg_stat_user_tables 
WHERE relname = 'users';

-- Verificar si hay login automático o session refresh excesivo
SELECT username, last_login, updated_at 
FROM users 
ORDER BY updated_at DESC LIMIT 10;
