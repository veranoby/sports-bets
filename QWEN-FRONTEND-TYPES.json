{
  "task": "URGENT: Complete Gemini's Frontend Type Definitions",
  "priority": "CRITICAL - Frontend won't build, blocking MVP launch",
  "estimated_time": "10-15 minutes",

  "CONTEXT": {
    "situation": "Gemini CLI worked 2+ hours but left frontend with 100+ TypeScript errors",
    "root_cause": "Missing type definitions and generic type parameter issues",
    "backend_status": "✅ FIXED - Backend running on port 3001",
    "frontend_status": "❌ BROKEN - TypeScript compilation failing"
  },

  "SPECIFIC_FIXES_NEEDED": [
    {
      "file": "frontend/src/types/index.ts",
      "action": "ADD_MISSING_TYPES",
      "requirements": [
        "Add Proposal interface with id, proposer, originalAmount, pagoAmount, createdAt",
        "Add Plan interface with id, name, price, features, duration",
        "Export both interfaces at end of file"
      ]
    },
    {
      "file": "frontend/src/hooks/useApi.ts",
      "action": "FIX_GENERIC_TYPES",
      "requirements": [
        "Remove ALL generic type parameters like <T> from execute() calls",
        "Lines 384, 391, 406, 413, 424, 448, 454, 459, 464+ need fixing",
        "Change execute<Something>() to just execute()",
        "DO NOT modify the base execute function signature"
      ]
    },
    {
      "file": "frontend/src/components/user/CurrentBettingPanel.tsx",
      "action": "FIX_BETTYPE_ENUM",
      "requirements": [
        "Change BetType values from uppercase to lowercase",
        "Line 168: change 'PAGO' | 'DOY' to 'pago' | 'doy'",
        "Ensure consistency with BetType definition"
      ]
    }
  ],

  "VALIDATION_COMMANDS": [
    "cd frontend && npx tsc --noEmit",
    "cd frontend && npm run build",
    "Should show 0 TypeScript errors when complete"
  ],

  "SUCCESS_CRITERIA": [
    "TypeScript compilation succeeds with 0 errors",
    "Frontend builds successfully",
    "Streaming components work (from Gemini)",
    "No breaking changes to existing functionality"
  ],

  "RESTRICTIONS": [
    "DO NOT modify Gemini's streaming components (HLSPlayer, useStreamStatus)",
    "DO NOT change backend APIs or models",
    "ONLY fix type definitions and imports",
    "NO functional changes, ONLY TypeScript fixes"
  ],

  "EXAMPLES": {
    "useApi_fix": "Change: execute<User>() → To: execute()",
    "types_addition": "Add: interface Proposal { id: string; proposer: {...}; ... }",
    "bettype_fix": "Change: 'PAGO' | 'DOY' → To: 'pago' | 'doy'"
  },

  "COORDINATION_NOTES": {
    "backend_status": "✅ WORKING - Claude fixed backend crashes",
    "gemini_work": "✅ EXCELLENT - Streaming components are high quality",
    "next_step": "Complete frontend types → Start RTMP server → Test streaming"
  }
}