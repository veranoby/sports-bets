{
  "metadata": {
    "purpose": "Universal safety protocols and coordination instructions for ANY AI working on GalloBets",
    "created": "2025-09-21",
    "updated": "2025-09-21",
    "project": "GalloBets - Professional Cockfighting Streaming Platform",
    "applicable_to": ["Claude", "Gemini", "Qwen", "GPT-4", "Cursor", "Windsurf", "Any AI system"]
  },

  "MANDATORY_READING": {
    "brain_system_files": [
      "brain/multi_ai_coordination_strategy.json - Overall AI coordination framework",
      "brain/multi_ai_decision_matrix.json - Task routing and AI selection",
      "brain/gemini_optimization_patterns.json - Gemini-specific patterns",
      "brain/sdd_system.json - Technical architecture",
      "brain/prd_system.json - Business requirements",
      "brain/backlog.json - Current tasks and timeline"
    ],
    "coordination_documents": [
      "CLAUDE.md - Claude-specific instructions",
      "GEMINI.md - Gemini React/TypeScript patterns",
      "QWEN.md - QWEN safety protocols and restrictions"
    ]
  },

  "CRITICAL_SAFETY_PROTOCOLS": {
    "QWEN_DESTROYED_FILES": {
      "incident_log": [
        "Profile.tsx - Replaced with placeholder comments",
        "AuthContext.tsx - Broke authentication flow",
        "auth.ts - Modified breaking login"
      ],
      "ABSOLUTELY_FORBIDDEN": [
        "frontend/src/pages/user/Profile.tsx",
        "frontend/src/contexts/AuthContext.tsx",
        "backend/src/routes/auth.ts",
        "frontend/src/services/api.ts"
      ],
      "qwen_restrictions": [
        "NEVER modify existing authentication",
        "NEVER use placeholder comments {/* */}",
        "NEVER delete working code",
        "MAXIMUM 30 minutes per session",
        "MAXIMUM 30 lines changed"
      ]
    },
    
    "BEFORE_ANY_CHANGES": {
      "mandatory_checks": [
        "Test current functionality works",
        "Create git backup: git commit -m 'backup before [AI] session'",
        "Verify no console errors exist",
        "Check brain files for context"
      ]
    }
  },

  "PROJECT_ARCHITECTURE": {
    "technology_stack": {
      "database": "PostgreSQL on Neon.tech (PERFORMANCE ISSUES: 1-3s queries)",
      "backend": "Node.js + Express + Sequelize + TypeScript",
      "frontend": "React + TypeScript + Tailwind CSS",
      "real_time": "Hybrid SSE (admin) + Minimal WebSocket (PAGO/DOY only)",
      "streaming": "RTMP + OBS Studio + HLS delivery",
      "payments": "Kushki (Ecuador/LATAM)"
    },
    
    "critical_architecture_decisions": {
      "sse_for_admin": "All admin real-time updates via SSE",
      "websocket_minimal": "ONLY for PAGO/DOY proposals (3-min timeout)",
      "no_websocket_for": ["Wallet operations", "Dynamic suggestions", "Chat"],
      "fight_temporal_logic": "upcoming → betting → live → completed (strict)",
      "betting_windows": "Bets ONLY accepted during status='betting'"
    }
  },

  "AI_COORDINATION_MATRIX": {
    "claude_exclusive_tasks": [
      "Database performance optimization (1-3s issue)",
      "SSE/WebSocket architecture design",
      "Betting logic implementation",
      "Authentication system fixes",
      "Error debugging and resolution",
      "Integration validation",
      "Deployment coordination"
    ],
    
    "gemini_primary_tasks": [
      "React component creation",
      "TypeScript interface definitions",
      "UI/UX implementation with Tailwind",
      "SSE hook integration (useSSE)",
      "Admin/Operator dashboards",
      "Responsive design implementation"
    ],
    
    "qwen_limited_tasks": [
      "Simple TypeScript 'any' cleanup ONLY",
      "New test file creation (not modification)",
      "Documentation additions (not changes)",
      "CSS styling additions (no logic)"
    ],
    
    "task_routing": {
      "database_work": "CLAUDE ONLY - QWEN forbidden",
      "real_time_systems": "Claude designs → Gemini implements UI",
      "authentication": "CLAUDE ONLY - QWEN destroyed it before",
      "betting_logic": "Claude designs → Gemini UI only",
      "bug_fixing": "CLAUDE ONLY - QWEN deletes code",
      "ui_components": "Gemini optimal, QWEN only if new/isolated"
    }
  },

  "CURRENT_SYSTEM_STATUS": {
    "working_features": [
      "✅ Basic authentication (JWT)",
      "✅ User roles (admin, operator, venue, gallera, user)",
      "✅ Admin dashboard structure",
      "✅ RTMP streaming configuration",
      "✅ Database schema complete"
    ],
    
    "critical_issues": {
      "database_performance": {
        "severity": "CRITICAL",
        "current": "Queries taking 1-3+ seconds",
        "target": "<500ms for 95% of queries",
        "owner": "Claude ONLY",
        "timeline": "Day 8-10 of MVP"
      },
      "connection_errors": {
        "severity": "HIGH",
        "issue": "ETIMEDOUT errors from Neon.tech",
        "solution": "Connection pool optimization",
        "owner": "Claude ONLY"
      },
      "typescript_errors": {
        "severity": "MEDIUM",
        "count": "370+ @typescript-eslint/no-explicit-any",
        "owner": "QWEN (limited) + Claude validation",
        "timeline": "Day 13-14"
      }
    }
  },

  "TIMELINE_CRITICAL": {
    "mvp_deadline": "September 21, 2025 (15 days total)",
    "current_day": "Day 1 of 15",
    "week_1_priorities": [
      "Day 1-2: SSE architecture (Claude)",
      "Day 3-4: Frontend SSE integration (Gemini)",
      "Day 5-6: Betting windows system (Claude + Gemini)",
      "Day 7: Operator dashboard (Gemini)"
    ],
    "week_2_priorities": [
      "Day 8-10: Database performance fix (Claude ONLY)",
      "Day 11-12: Integration testing (Claude + Gemini)",
      "Day 13-14: Polish and TypeScript (Gemini + limited QWEN)",
      "Day 15: Deployment (Claude)"
    ]
  },

  "DEVELOPMENT_PATTERNS": {
    "sse_implementation": {
      "backend": "EventSource with subscription management",
      "frontend": "useSSE hook with reconnection logic",
      "events": ["system-stats", "bet-updates", "fight-status", "notifications"]
    },
    
    "websocket_minimal": {
      "usage": "ONLY PAGO/DOY proposals",
      "timeout": "3 minutes for acceptance",
      "no_usage_for": ["Wallet", "Chat", "General updates"]
    },
    
    "betting_windows": {
      "states": ["upcoming", "betting", "live", "completed"],
      "rule": "Bets ONLY during 'betting' status",
      "enforcement": "Backend validation + Frontend UI"
    },
    
    "operator_restrictions": {
      "cannot_do": ["Modify admin users", "Modify operator users"],
      "can_do": ["Manage assigned events", "Create venue/gallera/users"],
      "implementation": "Role-based UI filtering + Backend validation"
    }
  },

  "QUALITY_GATES": {
    "before_commit": [
      "TypeScript compiles (npm run tsc)",
      "No console errors",
      "Core functionality still works",
      "Authentication not broken"
    ],
    
    "before_handoff": [
      "Component renders correctly",
      "API integration working",
      "Responsive design verified",
      "Document any issues found"
    ],
    
    "before_deployment": [
      "All tests passing",
      "Database queries <500ms",
      "SSE latency <1s",
      "No critical bugs"
    ]
  },

  "EMERGENCY_PROCEDURES": {
    "if_qwen_breaks_something": [
      "STOP immediately - do not let QWEN 'fix' it",
      "git reset --hard HEAD",
      "Request Claude for proper fix",
      "Update FORBIDDEN files list"
    ],
    
    "if_database_slow": [
      "Alert Claude immediately",
      "Do not attempt optimization without Claude",
      "Emergency: Add caching layer temporarily"
    ],
    
    "if_auth_breaks": [
      "CRITICAL - Stop all work",
      "git checkout -- [auth files]",
      "Claude exclusive fix required",
      "Test login flow completely"
    ],
    
    "if_timeline_slipping": [
      "Focus P0 features only",
      "Cut P1 features if needed",
      "Daily progress updates to brain",
      "Consider reducing scope"
    ]
  },

  "COORDINATION_PROTOCOL": {
    "daily_workflow": {
      "morning": [
        "Check brain/backlog.json for today's tasks",
        "Review brain/multi_ai_decision_matrix.json for task routing",
        "Verify git backup exists"
      ],
      "implementation": [
        "Follow AI-specific instructions (CLAUDE.md, GEMINI.md, QWEN.md)",
        "Test every 30 minutes",
        "Update brain files with progress"
      ],
      "handoff": [
        "Document what was completed",
        "List any issues encountered",
        "Prepare clear handoff notes"
      ]
    },
    
    "ai_specific_rules": {
      "claude": "Check brain files → Design architecture → Validate everything",
      "gemini": "Get Claude specs → Implement UI → Test responsiveness",
      "qwen": "EXTREME limitations → Simple tasks only → Claude validates"
    }
  },

  "SUCCESS_METRICS": {
    "technical_requirements": [
      "Database queries <500ms",
      "SSE latency <1 second",
      "Zero authentication issues",
      "TypeScript compiles cleanly"
    ],
    
    "business_requirements": [
      "Betting windows working correctly",
      "Operator dashboard functional",
      "Streaming integration complete",
      "Payment processing active"
    ],
    
    "timeline_requirements": [
      "MVP deployed by September 21",
      "Daily progress against timeline",
      "All P0 features complete"
    ]
  },

  "FINAL_REMINDERS": {
    "never_forget": [
      "QWEN destroyed authentication - be extremely careful",
      "Database performance is CRITICAL blocker",
      "15-day deadline is non-negotiable",
      "SSE for admin, WebSocket ONLY for PAGO/DOY",
      "Test before committing anything"
    ],
    
    "always_do": [
      "Check brain files for context",
      "Create git backups",
      "Follow AI coordination matrix",
      "Test core functionality",
      "Update brain with progress"
    ]
  }
}