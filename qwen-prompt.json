{
  "task_decomposition": [
    {
      "task_id": "ux-improvement-1",
      "title": "Consolidar controles de streaming en modal de gestión de eventos",
      "description": "Eliminar la pestaña redundante 'Streaming' y centralizar todos los controles en la pestaña de 'Peleas'",
      "estimated_hours": 2,
      "success_criteria": [
        "Toda la funcionalidad de streaming accesible desde la pestaña 'Peleas'",
        "No hay duplicación de controles entre pestañas",
        "UX es más intuitiva y directa"
      ]
    },
    {
      "task_id": "ux-improvement-2",
      "title": "Agregar ayuda contextual a cada elemento del formulario de creación de eventos",
      "description": "Implementar tooltips y mensajes de ayuda en la página de creación de eventos",
      "estimated_hours": 2,
      "success_criteria": [
        "Cada campo tiene un tooltip explicativo",
        "Mensajes de validación claros en tiempo real",
        "Experiencia de usuario mejorada"
      ]
    },
    {
      "task_id": "ux-improvement-3",
      "title": "Agregar tooltips explicativos a controles de eventos principales",
      "description": "Agregar ayuda contextual a botones y controles en la página principal de eventos",
      "estimated_hours": 1,
      "success_criteria": [
        "Cada botón tiene un tooltip que explica su función",
        "Usuarios nuevos pueden entender la funcionalidad sin manual externo"
      ]
    },
    {
      "task_id": "ux-improvement-4",
      "title": "Mejorar visualización de estado de eventos y streams",
      "description": "Implementar colores más distintivos e iconos claros para diferentes estados",
      "estimated_hours": 2,
      "success_criteria": [
        "Los estados son claramente distinguibles visualmente",
        "Los usuarios pueden identificar rápidamente el estado de un evento"
      ]
    }
  ],
  "purpose_and_requirements": {
    "purpose": "Mejorar la experiencia de usuario para operadores que gestionan eventos de streaming, reduciendo la curva de aprendizaje y facilitando la realización de tareas comunes",
    "functional_requirements": [
      "Proporcionar ayuda contextual directamente en la interfaz",
      "Reducir la duplicidad de funcionalidad entre componentes",
      "Mejorar la visibilidad del estado de los eventos y streams",
      "Simplificar flujos de trabajo comunes"
    ],
    "non_functional_requirements": [
      "Mantener rendimiento actual de la aplicación",
      "No introducir nuevos errores de TypeScript",
      "Preservar funcionalidad existente",
      "Mantener compatibilidad con todos los navegadores soportados"
    ]
  },
  "inputs_and_outputs": {
    "inputs": {
      "parameters": [
        {
          "name": "current_user",
          "type": "User",
          "description": "Usuario autenticado actualmente",
          "validation": "No nulo, debe tener rol de admin u operador",
          "example": {
            "id": "uuid",
            "username": "operador1",
            "role": "operator"
          }
        },
        {
          "name": "event_data",
          "type": "EventData",
          "description": "Datos del evento actualmente seleccionado",
          "validation": "Requerido para mostrar controles de streaming",
          "example": {
            "id": "uuid",
            "name": "Evento de prueba",
            "status": "scheduled",
            "streamStatus": "offline"
          }
        }
      ],
      "edge_cases": [
        "Usuario no tiene permisos para ciertos controles",
        "Evento no encontrado o sin permisos de acceso",
        "API de streaming no disponible temporalmente"
      ]
    },
    "outputs": {
      "structure": {
        "ui_components": ["Tooltips", "Status badges", "Action buttons", "Modal dialogs"],
        "response_format": "React components with proper TypeScript typing"
      }
    }
  },
  "constraints_and_restrictions": {
    "technical_constraints": [
      "Nunca editar archivos backend",
      "Mantener compatibilidad con TypeScript strict mode",
      "No romper flujos de trabajo existentes",
      "Seguir patrones de estilos existentes en la aplicación"
    ],
    "business_constraints": [
      "Operadores no pueden modificar usuarios admin/operadores",
      "Eventos deben mantener integridad de apuestas y peleas",
      "Sistema debe mantener rendimiento y estabilidad"
    ],
    "compatibility_requirements": [
      "Mantener compatibilidad con navegadores modernos",
      "No romper funcionalidades de administrador o usuarios regulares"
    ]
  },
  "apis_and_integrations": {
    "internal_apis": [
      {
        "name": "eventsAPI",
        "endpoints": [
          "eventsAPI.getAll",
          "eventsAPI.getById", 
          "eventsAPI.create",
          "eventsAPI.startStream",
          "eventsAPI.stopStream",
          "eventsAPI.activate",
          "eventsAPI.complete"
        ],
        "documentation_reference": "/api/events endpoints in api_endpoints_reference"
      },
      {
        "name": "usersAPI",
        "endpoints": [
          "usersAPI.getOperators",
          "usersAPI.getProfile"
        ],
        "documentation_reference": "/api/users endpoints in api_endpoints_reference"
      },
      {
        "name": "fightsAPI",
        "endpoints": [
          "fightsAPI.getAll",
          "fightsAPI.create",
          "fightsAPI.update"
        ],
        "documentation_reference": "/api/fights endpoints in api_endpoints_reference"
      }
    ],
    "external_apis": [
      {
        "name": "SSE connections",
        "endpoints": [
          "/api/sse/admin/fights",
          "/api/sse/admin/streaming"
        ],
        "authentication": "JWT token in connection",
        "rate_limits": "Handled by backend SSE service"
      }
    ],
    "database_schema": [
      {
        "table": "events",
        "relevant_fields": [
          "id",
          "name", 
          "status",
          "operatorId",
          "streamKey",
          "streamUrl"
        ],
        "documentation": "Verified in typescript_interfaces_reference.json EventData interface"
      }
    ]
  }
}