{
  "metadata": {
    "purpose": "Gemini 2.0 Flash Thinking task coordination prompts",
    "updated": "2025-10-31",
    "coordinator": "Claude Sonnet 4.5",
    "session_duration": "20-30 minutes recommended",
    "mandatory_mcps": ["--c7", "--context7"],
    "optional_mcps": ["--play", "--playwright"]
  },

  "current_task": {
    "status": "pending",
    "priority": "MEDIUM",
    "task_name": "Add image upload UI to CreateUserModal and EditVenueGalleraModal",
    "estimated_time": "30 minutes",
    "mcps_required": ["--c7", "--context7"],
    "description": "Extend user creation/editing modals with image upload fields for venue/gallera business entities",

    "context": {
      "recent_work": "Fixes applied to backend POST /users and EditVenueGalleraModal (commit 1250dcb)",
      "user_creation_workflow": "Admin can create venue/gallera users with business fields in CreateUserModal",
      "current_limitation": "Image upload fields missing in CreateUserModal and EditVenueGalleraModal",
      "backend_validation": "Backend validates max images: galleras=3, venues=2 (users.ts:295-310)",
      "existing_component": "ImageGalleryUpload.tsx already exists (maxImages configurable)"
    },

    "requirements": {
      "createusermodal_changes": [
        "Add conditional image upload field for role='venue' (max 2 images)",
        "Add conditional image upload field for role='gallera' (max 3 images)",
        "Use existing ImageGalleryUpload component",
        "Store images in formData.profileInfo.images array",
        "Validate client-side before submission"
      ],
      "editvenueegalleramodal_changes": [
        "Add image upload field in Entity Info tab",
        "Use ImageGalleryUpload with maxImages based on role (venue=2, gallera=3)",
        "Handle existing images display + new uploads",
        "Update profileInfo.images on save"
      ],
      "typescript_requirements": [
        "No 'any' types - strict mode enforced",
        "Extend CreateUserData interface if needed",
        "Update ProfileData interface if needed"
      ],
      "validation_requirements": [
        "Client-side validation: max images per role",
        "Show clear error if user exceeds limit",
        "Handle upload progress/errors gracefully"
      ]
    },

    "files_to_modify": [
      "frontend/src/components/admin/CreateUserModal.tsx",
      "frontend/src/components/admin/EditVenueGalleraModal.tsx"
    ],

    "files_to_reference": [
      "frontend/src/components/shared/ImageGalleryUpload.tsx (existing component)",
      "backend/src/routes/users.ts (lines 295-310 for validation logic)"
    ],

    "success_criteria": [
      "npx tsc --noEmit shows ZERO errors",
      "npm run build succeeds",
      "Image upload fields render conditionally based on role",
      "Client-side validation matches backend limits",
      "No 'any' types introduced"
    ],

    "testing_steps": [
      "Create venue user with 2 images → verify saves correctly",
      "Create gallera user with 3 images → verify saves correctly",
      "Try uploading 4 images for gallera → verify client-side error",
      "Edit existing venue/gallera → verify existing images display + can add/remove"
    ]
  },

  "completed_tasks": [],

  "template_for_new_tasks": {
    "status": "pending | in_progress | completed",
    "priority": "HIGH | MEDIUM | LOW",
    "task_name": "Brief description",
    "estimated_time": "X minutes",
    "mcps_required": ["--c7"],
    "description": "Detailed task description",
    "context": {},
    "requirements": {},
    "files_to_modify": [],
    "files_to_reference": [],
    "success_criteria": [],
    "testing_steps": []
  }
}
