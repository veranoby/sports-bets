{
  "metadata": {
    "created": "2025-10-12",
    "purpose": "Coordinate critical backend optimizations between Claude, Gemini, and QWEN",
    "timeline": "12 hours (database) + 20 hours (caching) = 32 hours total",
    "estimated_completion": "3-4 days parallel work",
    "version": "1.0"
  },

  "work_distribution_strategy": {
    "claude_ownership": {
      "role": "Technical Lead - Critical Backend Optimizations",
      "responsibilities": [
        "Database query optimization (N+1 fixes, indexes)",
        "Redis caching implementation (critical endpoints)",
        "Connection pool optimization",
        "Security validation of all changes",
        "Final code review and approval",
        "Production deployment coordination"
      ],
      "estimated_hours": 24,
      "criticality": "P0 - Cannot delegate"
    },

    "gemini_ownership": {
      "role": "Frontend Integration - Testing & Validation",
      "responsibilities": [
        "Test frontend integration with optimized APIs",
        "Verify UI performance improvements",
        "Update loading states if needed",
        "Cache venue queries (low-risk backend task)",
        "Integration testing documentation"
      ],
      "estimated_hours": 8,
      "criticality": "P1 - Can work in parallel"
    },

    "qwen_ownership": {
      "role": "Support - Testing Scripts & Documentation",
      "responsibilities": [
        "Create load testing scripts",
        "Document optimization changes",
        "Create monitoring dashboards",
        "Execute test suites",
        "NO backend logic modifications"
      ],
      "estimated_hours": 6,
      "criticality": "P2 - Support role only"
    },

    "coordination_rules": {
      "no_parallel_work_on_same_file": "Critical - prevents merge conflicts",
      "gemini_frontend_only": "FORBIDDEN to modify backend/src/ except venue caching under supervision",
      "qwen_no_logic_changes": "FORBIDDEN to modify business logic, only scripts/docs",
      "claude_validates_all": "All Gemini and QWEN work reviewed by Claude before merge",
      "max_session_duration": {
        "gemini": "2 hours focused work, then handoff",
        "qwen": "1 hour focused work, then validation"
      }
    }
  },

  "critical_optimizations_breakdown": {
    "optimization_1_database_queries": {
      "severity": "CRITICAL",
      "total_hours": 12,
      "owner": "Claude (primary)",
      "status": "ready_to_start",

      "phase_1_confirmation": {
        "duration": "2 hours",
        "owner": "Claude",
        "tasks": [
          {
            "task": "Verify missing indexes",
            "files": ["backend/src/models/*.ts"],
            "commands": ["EXPLAIN ANALYZE on slow queries"],
            "deliverable": "List of 7 missing indexes with impact"
          },
          {
            "task": "Detect N+1 query patterns",
            "files": ["backend/src/routes/{events,fights,bets}.ts"],
            "commands": ["Enable SQL logging", "Count queries per request"],
            "deliverable": "List of 4+ N+1 patterns"
          },
          {
            "task": "Analyze connection pool",
            "files": ["backend/src/config/database.ts"],
            "deliverable": "Pool utilization metrics"
          }
        ]
      },

      "phase_2_implementation": {
        "duration": "8 hours",
        "owner": "Claude",

        "priority_1_add_indexes": {
          "duration": "2 hours",
          "files": ["backend/migrations/20251012000000-add-critical-performance-indexes.js"],
          "deliverable": "7 indexes created with CONCURRENTLY",
          "validation": "Run migration, verify EXPLAIN ANALYZE uses indexes",
          "safety": "Uses CONCURRENTLY - no table locks"
        },

        "priority_2_fix_n1_queries": {
          "duration": "3 hours",
          "files": [
            "backend/src/routes/bets.ts (line 31-52)",
            "backend/src/routes/events.ts (lines 102-114, 153-164)",
            "backend/src/routes/fights.ts (line 44-55)"
          ],
          "changes": [
            "Add separate: false to all includes",
            "Use subqueries for aggregations",
            "Implement query result caching"
          ],
          "validation": "Query count: 20+ → 1-3 per request",
          "safety": "Changes are additive, no breaking changes"
        },

        "priority_3_optimize_connection_pool": {
          "duration": "1 hour",
          "files": ["backend/src/config/database.ts (lines 10-26)"],
          "changes": [
            "MAX_CONNECTIONS: 10 → 15",
            "CONNECTION_TIMEOUT_MS: 45000 → 30000",
            "Add statement_timeout: 5000"
          ],
          "validation": "Pool utilization <80% under load",
          "safety": "Configuration only, reversible"
        },

        "priority_4_add_monitoring": {
          "duration": "2 hours",
          "owner": "Claude + QWEN",
          "claude_tasks": [
            "Add slow query logging middleware",
            "Create /api/monitoring/database endpoint"
          ],
          "qwen_tasks": [
            "Create load testing script with autocannon",
            "Create monitoring dashboard HTML"
          ],
          "deliverable": "Real-time query performance metrics"
        }
      },

      "phase_3_validation": {
        "duration": "2 hours",
        "owner": "Claude + QWEN",
        "tasks": [
          {
            "task": "Load testing",
            "owner": "QWEN executes, Claude analyzes",
            "commands": ["autocannon -c 50 -d 30 http://localhost:3001/api/events"],
            "success_criteria": "p95 < 500ms, throughput > 100 req/s"
          },
          {
            "task": "Query analysis",
            "owner": "Claude",
            "validation": "All queries use indexes, <3 queries per request"
          },
          {
            "task": "Documentation",
            "owner": "QWEN",
            "deliverable": "Optimization summary with before/after metrics"
          }
        ]
      }
    },

    "optimization_2_redis_caching": {
      "severity": "CRITICAL",
      "total_hours": 20,
      "owner": "Claude (primary) + Gemini (venues)",
      "status": "ready_to_start",

      "priority_1_cache_fight_queries": {
        "duration": "3 hours",
        "owner": "Claude",
        "criticality": "P0 - Highest frequency endpoints",
        "files": ["backend/src/routes/fights.ts"],
        "endpoints_to_cache": [
          "GET /api/fights (list)",
          "GET /api/fights/:id (detail)",
          "GET /api/events/:eventId/current-betting"
        ],
        "cache_strategy": {
          "ttl": "30 seconds (real-time betting data)",
          "invalidation": "On fight status change"
        },
        "deliverable": "70-80% reduction in fight queries",
        "safety": "Graceful degradation if Redis unavailable"
      },

      "priority_2_cache_event_details": {
        "duration": "2 hours",
        "owner": "Claude",
        "criticality": "P0 - High frequency",
        "files": ["backend/src/routes/events.ts"],
        "endpoints_to_cache": [
          "GET /api/events/:id",
          "GET /api/events/:id/stats"
        ],
        "cache_strategy": {
          "ttl": "60 seconds",
          "invalidation": "On event status change or fight update"
        },
        "deliverable": "60-70% reduction in event detail queries",
        "safety": "Graceful degradation if Redis unavailable"
      },

      "priority_3_cache_venue_queries": {
        "duration": "1.5 hours",
        "owner": "Gemini (supervised by Claude)",
        "criticality": "P1 - Low risk, near-static data",
        "files": ["backend/src/routes/venues.ts"],
        "endpoints_to_cache": [
          "GET /api/venues",
          "GET /api/venues/:id"
        ],
        "cache_strategy": {
          "ttl": "300 seconds (5 minutes)",
          "invalidation": "On venue create/update"
        },
        "gemini_instructions": {
          "pattern_to_follow": "Copy exact pattern from backend/src/routes/events.ts lines 83-139",
          "safety_check": "Test graceful degradation without Redis",
          "validation": "Claude reviews before merge"
        },
        "deliverable": "85-90% reduction in venue queries",
        "safety": "Static data, very low risk"
      },

      "priority_4_bet_invalidation_hooks": {
        "duration": "1 hour",
        "owner": "Claude",
        "criticality": "P0 - Cache consistency",
        "files": ["backend/src/routes/bets.ts"],
        "changes": [
          "Add cache.invalidatePattern('fights_*') on bet create",
          "Add cache.invalidatePattern('event_*') on bet accept",
          "Add cache.invalidate on wallet updates"
        ],
        "deliverable": "Cache stays fresh with real-time updates",
        "safety": "Only adds invalidation, doesn't change logic"
      },

      "priority_5_frontend_integration_testing": {
        "duration": "4 hours",
        "owner": "Gemini",
        "criticality": "P1 - Validation",
        "tasks": [
          {
            "task": "Test fight list loading",
            "file": "frontend/src/pages/Fights.tsx",
            "validation": "Faster load times, no UI changes needed"
          },
          {
            "task": "Test event details",
            "file": "frontend/src/pages/Events.tsx",
            "validation": "Verify real-time updates still work"
          },
          {
            "task": "Test betting flow",
            "file": "frontend/src/components/BettingWindow.tsx",
            "validation": "No cache staleness during betting"
          },
          {
            "task": "Document performance improvements",
            "deliverable": "Before/after screenshots and metrics"
          }
        ],
        "safety": "Frontend testing only, no backend changes"
      },

      "priority_6_load_testing": {
        "duration": "2 hours",
        "owner": "QWEN executes, Claude analyzes",
        "tasks": [
          {
            "task": "Create load test script",
            "owner": "QWEN",
            "file": "scripts/load-test-optimized.sh",
            "deliverable": "Automated test script"
          },
          {
            "task": "Execute tests",
            "owner": "QWEN",
            "scenarios": [
              "50 concurrent users - event browsing",
              "100 concurrent users - betting window",
              "25 concurrent users - wallet operations"
            ]
          },
          {
            "task": "Analyze results",
            "owner": "Claude",
            "success_criteria": {
              "cache_hit_rate": ">75%",
              "response_time": "<50ms cached, <200ms uncached",
              "db_query_reduction": ">70%"
            }
          }
        ]
      }
    }
  },

  "execution_order": {
    "phase_1_setup": {
      "duration": "30 minutes",
      "tasks": [
        "Claude: Create feature branch 'optimize/database-caching'",
        "QWEN: Setup Redis locally (docker run redis)",
        "Gemini: Pull latest main, prepare test environment"
      ]
    },

    "phase_2_parallel_work_day_1": {
      "duration": "8 hours",
      "claude_tasks": [
        "Hour 1-2: Database confirmation phase",
        "Hour 3-4: Add database indexes migration",
        "Hour 5-7: Fix N+1 queries in events.ts and bets.ts",
        "Hour 8: Commit and push for review"
      ],
      "qwen_tasks": [
        "Hour 1-2: Create load testing scripts",
        "Hour 3-4: Setup monitoring dashboard",
        "Hour 5-6: Test Redis connection locally",
        "Hour 7-8: Document setup procedures"
      ],
      "gemini_tasks": [
        "Hour 1-4: Study caching patterns in events.ts",
        "Hour 5-8: Implement venue caching (supervised)",
        "Note: Wait for Claude's N+1 fixes before frontend testing"
      ]
    },

    "phase_3_parallel_work_day_2": {
      "duration": "8 hours",
      "claude_tasks": [
        "Hour 1-2: Fix N+1 queries in fights.ts",
        "Hour 3-4: Optimize connection pool",
        "Hour 5-7: Implement fight queries caching",
        "Hour 8: Code review Gemini's venue caching"
      ],
      "gemini_tasks": [
        "Hour 1-4: Test frontend with optimized backend",
        "Hour 5-8: Document frontend performance improvements",
        "Note: Report any issues to Claude immediately"
      ],
      "qwen_tasks": [
        "Hour 1-4: Execute load tests on optimized code",
        "Hour 5-8: Create performance comparison report"
      ]
    },

    "phase_4_parallel_work_day_3": {
      "duration": "8 hours",
      "claude_tasks": [
        "Hour 1-3: Implement event details caching",
        "Hour 4-5: Add bet invalidation hooks",
        "Hour 6-7: Add slow query monitoring",
        "Hour 8: Final integration testing"
      ],
      "gemini_tasks": [
        "Hour 1-4: Complete frontend integration testing",
        "Hour 5-8: Create visual performance report"
      ],
      "qwen_tasks": [
        "Hour 1-4: Execute final load tests",
        "Hour 5-8: Compile optimization summary document"
      ]
    },

    "phase_5_validation_and_merge": {
      "duration": "4 hours",
      "tasks": [
        "Hour 1: Claude validates all changes",
        "Hour 2: Run full test suite",
        "Hour 3: Review QWEN's performance report",
        "Hour 4: Merge to main, prepare deployment"
      ]
    }
  },

  "safety_protocols": {
    "gemini_restrictions": {
      "allowed_files": [
        "frontend/src/**/*",
        "backend/src/routes/venues.ts (ONLY caching, supervised)"
      ],
      "forbidden_files": [
        "backend/src/routes/{auth,fights,bets,events,subscriptions}.ts",
        "backend/src/config/**/*",
        "backend/src/models/**/*",
        "backend/migrations/**/*"
      ],
      "supervision_required": "Claude must review before Gemini commits to venues.ts",
      "max_changes_per_file": "20 lines (prevent large destructive edits)",
      "validation_command": "npm run test && npm run build"
    },

    "qwen_restrictions": {
      "allowed_files": [
        "scripts/**/*",
        "claudedocs/**/*",
        "*.md documentation files"
      ],
      "forbidden_files": [
        "backend/src/**/* (ALL backend code)",
        "frontend/src/**/* (ALL frontend code)",
        "backend/migrations/**/*"
      ],
      "allowed_operations": [
        "Create new files in scripts/",
        "Update documentation",
        "Execute read-only commands (tests, analysis)"
      ],
      "max_session_duration": "1 hour before validation"
    },

    "claude_validation_checklist": {
      "before_gemini_merge": [
        "Review venue caching implementation",
        "Verify graceful degradation works",
        "Test Redis connection failure handling",
        "Run integration tests"
      ],
      "before_qwen_handoff": [
        "Verify scripts are read-only (no destructive operations)",
        "Review test commands for safety",
        "Ensure documentation accuracy"
      ],
      "before_production_deployment": [
        "All optimizations tested locally",
        "Performance improvements validated (>70% query reduction)",
        "Cache hit rate >75%",
        "No breaking changes to API contracts",
        "Rollback plan documented"
      ]
    }
  },

  "success_metrics": {
    "database_optimization_criteria": [
      "✅ p95 query time: <500ms (from 1500-3000ms)",
      "✅ Query count: 1-3 per request (from 20-50)",
      "✅ Connection timeout errors: <1/hour (from 10-20/hour)",
      "✅ Pool utilization: <80% under load",
      "✅ Index usage: >90% of queries"
    ],

    "caching_optimization_criteria": [
      "✅ Cache hit rate: >75%",
      "✅ DB query reduction: >70%",
      "✅ Response time improvement: 60-80% faster",
      "✅ Redis memory usage: <100MB",
      "✅ Graceful degradation: Works without Redis"
    ],

    "cost_savings_validation": [
      "✅ Database queries: 100M/month → 20-30M/month",
      "✅ Monthly savings: $16,000-$17,280",
      "✅ Annual savings: $192,000-$207,000"
    ]
  },

  "communication_protocol": {
    "progress_updates": {
      "frequency": "Every 2 hours during active work",
      "format": "Update this JSON file with status changes",
      "participants": ["Claude", "Gemini", "QWEN", "User"]
    },

    "handoff_protocol": {
      "gemini_to_claude": [
        "Gemini commits changes to feature branch",
        "Gemini updates this JSON with completed tasks",
        "Claude reviews within 30 minutes",
        "Claude approves or requests changes"
      ],
      "qwen_to_claude": [
        "QWEN creates scripts/documentation",
        "QWEN executes tests and saves results",
        "Claude reviews test results",
        "Claude validates before using in decision-making"
      ]
    },

    "decision_authority": {
      "architecture_decisions": "Claude only",
      "backend_logic_changes": "Claude only",
      "frontend_changes": "Gemini with Claude review",
      "documentation": "QWEN with Claude review",
      "deployment_decisions": "User + Claude"
    }
  },

  "rollback_plan": {
    "if_optimizations_cause_issues": {
      "step_1": "Revert feature branch: git revert HEAD~5",
      "step_2": "Undo migration: npm run migrate:undo",
      "step_3": "Restore connection pool: Revert database.ts",
      "step_4": "Clear Redis cache: redis-cli FLUSHALL",
      "step_5": "Restart backend: npm run dev"
    },
    "partial_rollback": {
      "if_caching_only": "Remove cache calls, keep query optimizations",
      "if_queries_only": "Undo migration, keep caching"
    }
  },

  "current_status": {
    "last_updated": "2025-10-12T00:00:00Z",
    "phase": "ready_to_start",
    "claude_status": "awaiting_user_approval",
    "gemini_status": "awaiting_assignment",
    "qwen_status": "awaiting_assignment",
    "estimated_completion": "2025-10-15 (3 days parallel work)"
  }
}
