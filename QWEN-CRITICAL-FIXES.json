{
  "task": "Fix Critical TypeScript Errors - Final Pass",
  "priority": "HIGH - Enable MVP testing",
  "estimated_time": "8-10 minutes",

  "CRITICAL_FIXES": [
    {
      "file": "frontend/src/hooks/useApi.ts",
      "lines": [448, 454, 459, 464],
      "issue": "Generic type conflicts in betsAPI calls",
      "fix": "Remove generic types from betsAPI method calls",
      "example": "execute(() => betsAPI.getCompatibleBets(params)) // Remove <T>"
    },
    {
      "file": "frontend/src/pages/admin/AdminDashboard.tsx",
      "lines": [119, 138, 143],
      "issue": "Missing API methods (.getAll, .getTransactions, .getStats)",
      "fix": "Change to existing API methods or add fallback",
      "example": "eventsAPI.getAll() â†’ eventsAPI.fetchEvents()"
    },
    {
      "file": "frontend/src/pages/admin/Articles.tsx",
      "lines": [144, 148, 152, 157, 168],
      "issue": "Undefined variables (fetchData, pendingArticles)",
      "fix": "Add missing state variables or remove references"
    },
    {
      "file": "frontend/src/pages/user/LiveEvent.tsx",
      "lines": [428, 442, 638, 639],
      "issue": "Property mismatch: redFighter vs redCorner",
      "fix": "Use correct property names from Fight interface"
    }
  ],

  "VALIDATION": "cd frontend && npx tsc --noEmit | grep -E '(useApi|AdminDashboard|Articles|LiveEvent)' | head -10",

  "SUCCESS_CRITERIA": [
    "Zero TypeScript errors in specified files",
    "Frontend dev server runs without critical errors",
    "Build process completes successfully"
  ],

  "RESTRICTIONS": [
    "DO NOT modify Gemini's streaming components",
    "DO NOT change type definitions in types/index.ts",
    "ONLY fix the 4 specified critical issues"
  ]
}