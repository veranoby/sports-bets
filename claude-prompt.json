{
  "project": "GalloBets Critical Bug Fixes & Role Implementation V5",
  "version": "5.1.0",
  "date": "2025-08-23",
  "focus": "Admin and User environments with complete role support",

  "mcp_requirements": {
    "required": ["context7", "filesystem", "git", "database"],
    "context7": "MANDATORY for multi-file management",
    "note": "Ensure all MCPs are enabled before starting"
  },

  "critical_context": {
    "roles_matrix": {
      "super_admin": {
        "description": "Control total sobre la plataforma",
        "key_permissions": [
          "edit_any_user",
          "change_any_password",
          "manage_finances",
          "approve_withdrawals"
        ]
      },
      "operator": {
        "description": "Personal técnico asignado a gallera",
        "key_permissions": [
          "create_events",
          "manage_stream",
          "create_fights",
          "record_results"
        ],
        "workflow": "Pre-Event → During Event → Post-Event (see phase_9)"
      },
      "venue": {
        "description": "Representante de Gallera",
        "key_permissions": [
          "manage_own_gallera",
          "request_events",
          "view_stats"
        ]
      },
      "user": {
        "description": "Cliente final apostador",
        "key_permissions": [
          "manage_wallet",
          "create_accept_bets",
          "view_streams"
        ]
      },
      "gallera": {
        "description": "Usuario + escritor de artículos",
        "key_permissions": [
          "all_user_permissions",
          "create_edit_articles",
          "moderate_content"
        ]
      }
    }
  },

  "phase_1_database_critical": {
    "priority": "CRITICAL",
    "estimated_time": "30 minutes",
    "purpose": "Fix database schema breaking errors",

    "tasks": [
      {
        "id": "1.1",
        "title": "Add venue_id to articles table",
        "sql": "ALTER TABLE articles ADD COLUMN venue_id UUID REFERENCES venues(id) ON DELETE SET NULL",
        "model_update": "backend/src/models/Article.ts",
        "add": "venueId: { type: DataTypes.UUID, allowNull: true }",
        "association": "Article.belongsTo(models.Venue, { foreignKey: 'venueId', as: 'venue' })"
      },
      {
        "id": "1.2",
        "title": "Add status to notifications table",
        "sql": "ALTER TABLE notifications ADD COLUMN status VARCHAR(10) DEFAULT 'unread' CHECK (status IN ('unread', 'read'))",
        "model_update": "backend/src/models/Notification.ts",
        "add": "status: { type: DataTypes.ENUM('unread', 'read'), defaultValue: 'unread' }"
      },
      {
        "id": "1.3",
        "title": "Ensure gallera role in users enum",
        "check": "SELECT * FROM pg_enum WHERE enumlabel = 'gallera'",
        "if_missing": "ALTER TYPE enum_users_role ADD VALUE 'gallera'",
        "model": "Ensure User model includes 'gallera' in role enum"
      },
      {
        "id": "1.4",
        "title": "Fix Transaction-User association",
        "model": "backend/src/models/index.ts",
        "verify": "Transaction.belongsTo(User, { foreignKey: 'userId', as: 'user' })",
        "add_if_missing": true
      }
    ],

    "migration_script": "Create and run migrations/fix-schema-v5.js"
  },

  "phase_2_api_implementations": {
    "priority": "HIGH",
    "estimated_time": "40 minutes",
    "purpose": "Implement missing API endpoints",

    "tasks": [
      {
        "id": "2.1",
        "title": "Add wallet revenue endpoints",
        "file": "backend/src/routes/wallet.ts",
        "endpoints": [
          {
            "route": "GET /revenue-by-source",
            "implementation": "Aggregate transactions by type, return totals"
          },
          {
            "route": "GET /revenue-trends",
            "implementation": "Daily/monthly aggregation with date ranges"
          }
        ]
      },
      {
        "id": "2.2",
        "title": "Fix frontend API methods",
        "file": "frontend/src/config/api.ts",
        "add_methods": {
          "walletAPI.getUserWallet": "(userId: string) => axios.get(`/api/wallet/user/${userId}`)",
          "usersAPI.getOperators": "() => axios.get('/api/users?role=operator&isActive=true')",
          "systemAPI": "{ getMetrics: () => axios.get('/api/system/metrics'), getHealth: () => axios.get('/api/system/health') }"
        }
      },
      {
        "id": "2.3",
        "title": "Fix transaction type enum",
        "issue": "invalid enum value 'admin'",
        "fix": "Change query from type=admin to proper enum values (deposit, withdrawal, bet_payout)",
        "file": "frontend/src/pages/admin/Finance.tsx"
      }
    ]
  },

  "phase_3_user_management_fixes": {
    "priority": "HIGH",
    "estimated_time": "45 minutes",
    "purpose": "Fix user management and add gallera support",

    "tasks": [
      {
        "id": "3.1",
        "title": "Fix user status toggle",
        "backend": "backend/src/routes/users.ts",
        "change": "Accept 'status' boolean instead of 'isActive'",
        "validation": "body('status').isBoolean()",
        "update": "user.isActive = status"
      },
      {
        "id": "3.2",
        "title": "Add gallera to role filters",
        "file": "frontend/src/pages/admin/Users.tsx",
        "filter_options": ["admin", "operator", "venue", "user", "gallera"],
        "fix_filter_logic": "Ensure 'user' maps correctly (not 'usuario')"
      },
      {
        "id": "3.3",
        "title": "Update role change to include gallera",
        "files": [
          "backend/src/routes/users.ts",
          "frontend/src/components/admin/UserManagementTable.tsx"
        ],
        "validation": ".isIn(['admin', 'operator', 'venue', 'user', 'gallera'])"
      },
      {
        "id": "3.4",
        "title": "Create user creation page",
        "file": "frontend/src/pages/admin/CreateUser.tsx",
        "features": [
          "Role dropdown with all 5 roles",
          "Username, email, password fields",
          "Profile info (optional)",
          "isActive toggle (default true)",
          "Form validation",
          "Success redirect to users list"
        ]
      },
      {
        "id": "3.5",
        "title": "Add user edit modal",
        "file": "frontend/src/pages/admin/Users.tsx",
        "modal_features": [
          "Edit any user profile fields",
          "Change password button (admin power)",
          "Update profile info",
          "Save changes with validation"
        ],
        "admin_override": "Admin can edit ANY user regardless of role"
      },
      {
        "id": "3.6",
        "title": "Simplify admin sidebar",
        "file": "frontend/src/components/admin/AdminSidebar.tsx",
        "changes": [
          "Rename 'Usuarios Regulares' → 'Usuarios'",
          "Remove 'Usuarios Venue' item",
          "Remove 'Usuarios Operadores' item"
        ]
      }
    ]
  },

  "phase_4_login_error_handling": {
    "priority": "CRITICAL",
    "estimated_time": "15 minutes",
    "purpose": "Prevent login crashes",

    "tasks": [
      {
        "id": "4.1",
        "title": "Add comprehensive error handling",
        "file": "frontend/src/pages/LoginPage.tsx",
        "implementation": {
          "wrap_in_try_catch": true,
          "error_cases": {
            "401": "Credenciales inválidas",
            "404": "Usuario no encontrado",
            "500": "Error del servidor",
            "network": "Error de conexión"
          },
          "never_throw": "Always catch and display error message"
        }
      },
      {
        "id": "4.2",
        "title": "Add error state UI",
        "add": "const [error, setError] = useState<string | null>(null)",
        "display": "Red alert box below form",
        "clear": "Clear on input change"
      }
    ]
  },

  "phase_5_article_system": {
    "priority": "MEDIUM",
    "estimated_time": "30 minutes",
    "purpose": "Complete article editor and fix errors",

    "tasks": [
      {
        "id": "5.1",
        "title": "Fix article API validation",
        "backend": "backend/src/routes/articles.ts",
        "fix": "Remove or make optional venue requirement in validation"
      },
      {
        "id": "5.2",
        "title": "Complete article editor",
        "file": "frontend/src/components/admin/ArticleEditor.tsx",
        "implement": [
          "Rich text editor (react-quill)",
          "Title, subtitle, content fields",
          "Category selection",
          "Featured toggle",
          "Status (draft/published)",
          "Save and publish buttons"
        ]
      },
      {
        "id": "5.3",
        "title": "Fix modal z-index",
        "issue": "Modal on black background",
        "fix": "z-50 for overlay, z-[60] for modal content"
      }
    ]
  },

  "phase_6_events_fixes": {
    "priority": "HIGH",
    "estimated_time": "25 minutes",
    "purpose": "Fix events section",

    "tasks": [
      {
        "id": "6.1",
        "title": "Fix getOperators error",
        "already_fixed_in": "Phase 2.2",
        "verify": "usersAPI.getOperators exists"
      },
      {
        "id": "6.2",
        "title": "Create event creation page",
        "file": "frontend/src/pages/admin/CreateEvent.tsx",
        "fields": [
          "Event name",
          "Select venue (dropdown)",
          "Scheduled date/time",
          "Assign operator (optional)",
          "Description"
        ]
      },
      {
        "id": "6.3",
        "title": "Add route for create event",
        "file": "frontend/src/App.tsx",
        "route": "/admin/events/create → CreateEvent component"
      }
    ]
  },

  "phase_7_visual_fixes": {
    "priority": "LOW",
    "estimated_time": "15 minutes",
    "purpose": "Fix visual issues",

    "tasks": [
      {
        "id": "7.1",
        "title": "Fix text contrast",
        "global": "Replace text-gray-300/400 with text-gray-500",
        "files": "All .tsx components"
      },
      {
        "id": "7.2",
        "title": "Add Venues section for users",
        "file": "frontend/src/pages/user/Venues.tsx",
        "copy_from": "Galleras.tsx",
        "modify": "Show venues instead of galleras"
      },
      {
        "id": "7.3",
        "title": "Fix button states",
        "issue": "All users show 'Activar' button",
        "fix": "Show 'Desactivar' for active users, 'Activar' for inactive"
      }
    ]
  },

  "phase_8_ads_system": {
    "priority": "LOW",
    "estimated_time": "20 minutes",
    "purpose": "Verify ads system or remove",

    "decision_tree": {
      "check": "Does backend/src/models/Ad.ts exist?",
      "if_yes": {
        "action": "Create admin ads management",
        "file": "frontend/src/pages/admin/Ads.tsx",
        "features": ["List ads", "Create/edit/delete", "Position management"]
      },
      "if_no": {
        "action": "Remove all ad references",
        "files_to_clean": [
          "frontend/src/components/ads/*",
          "Remove AdSpace imports"
        ]
      }
    }
  },

  "phase_9_operator_workflow": {
    "priority": "INFO",
    "purpose": "Document operator event workflow",
    "note": "For future implementation",

    "workflow": {
      "pre_event": [
        "Login as operator",
        "Create/select event",
        "Get stream key",
        "Configure OBS with RTMP URL",
        "Test transmission",
        "Activate event (status: live)"
      ],
      "during_event": [
        "Create fights dynamically",
        "Open betting window (2-5 min)",
        "Monitor live stats",
        "Close betting (30s before fight)",
        "Record official result",
        "Validate automatic payouts"
      ],
      "post_event": [
        "System processes pending bets",
        "Generate audit reports",
        "Send notifications via WebSocket",
        "Archive event (status: completed)"
      ]
    }
  },

  "phase_10_testing": {
    "priority": "CRITICAL",
    "estimated_time": "30 minutes",
    "purpose": "Validate all fixes",

    "test_matrix": {
      "database": [
        "Articles load without venue_id error",
        "Notifications show with status field",
        "Transactions show user association",
        "Gallera role exists in enum"
      ],
      "admin_users": [
        "Filter by gallera role works",
        "Toggle user status works",
        "Change role includes gallera",
        "Create user with any role",
        "Edit any user profile",
        "Change any user password"
      ],
      "admin_sections": [
        "Articles load and can create",
        "Events load and can create",
        "Finance shows revenue data",
        "Requests show withdrawals",
        "Monitoring loads"
      ],
      "user_dashboard": [
        "Dashboard loads without errors",
        "News banner works",
        "Notifications display",
        "Venues section exists"
      ],
      "login": [
        "Wrong username → error message, no crash",
        "Wrong password → error message, no crash",
        "Correct credentials → successful login"
      ]
    }
  },

  "execution_order": [
    "CRITICAL: Phase 1 (Database) MUST be first",
    "HIGH: Phases 2-3 (APIs and User Management)",
    "CRITICAL: Phase 4 (Login fixes)",
    "MEDIUM: Phases 5-6 (Articles and Events)",
    "LOW: Phases 7-8 (Visual and Ads)",
    "INFO: Phase 9 (Documentation only)",
    "CRITICAL: Phase 10 (Testing)"
  ],

  "rollback_plan": {
    "database": "psql gallobets < backup.sql",
    "code": "git reset --hard HEAD~",
    "emergency": "git checkout main"
  },

  "credentials": {
    "admin": "admin@sportsbets.com / Test123456",
    "user": "testuser1@sportsbets.com / Test123456",
    "note": "All test users use Test123456"
  }
}
