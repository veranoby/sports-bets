{
  "project": "GalloBets Fix V3 - DB Sync",
  "version": "6.0.0",
  "analysis": "Models don't match actual DB structure",

  "phase_1_model_fixes": {
    "priority": "CRITICAL",
    "tasks": [
      {
        "file": "backend/src/models/Article.ts",
        "fix": "Add venue_id field properly",
        "code": "venue_id: { type: DataTypes.UUID, allowNull: true, field: 'venue_id' }"
      },
      {
        "file": "backend/src/models/Notification.ts",
        "fix": "Use is_read instead of status",
        "replace": {
          "old": "status: { type: DataTypes.ENUM",
          "new": "isRead: { type: DataTypes.BOOLEAN, defaultValue: false, field: 'is_read' }"
        }
      },
      {
        "file": "backend/src/models/index.ts",
        "fix": "Remove direct Transactionâ†’User association",
        "remove": "Transaction.belongsTo(User",
        "explanation": "Transactions link to Wallets, not Users directly"
      }
    ]
  },

  "phase_2_api_fixes": {
    "tasks": [
      {
        "file": "backend/src/routes/wallet.ts",
        "fix": "Join through wallet for user",
        "include": "[{ model: Wallet, include: [User] }]"
      },
      {
        "file": "backend/src/routes/users.ts",
        "fix": "Change isActive to status in body",
        "replace": "body('isActive')",
        "with": "body('status')"
      }
    ]
  },

  "phase_3_frontend_fixes": {
    "tasks": [
      {
        "file": "frontend/public/sw.js",
        "fix": "Add error handling to service worker",
        "wrap_fetch": "try { /* fetch */ } catch(e) { return Response.error() }"
      },
      {
        "file": "frontend/src/pages/LoginPage.tsx",
        "add_error_boundary": true,
        "wrap_api_calls": "try/catch with proper error display"
      }
    ]
  },

  "validation_queries": [
    "SELECT * FROM articles LIMIT 1;",
    "SELECT * FROM notifications LIMIT 1;",
    "SELECT t.*, w.user_id FROM transactions t JOIN wallets w ON t.wallet_id = w.id LIMIT 1;"
  ]
}
