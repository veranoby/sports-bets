{
  "instructions": {
    "priority": "P0_CRITICAL_PERFORMANCE_FIX",
    "project": "GalloBets - Database Performance Optimization",
    "critical_issue": "users table excessive updates (140x ratio)",
    "timeline": "2-4 hours",
    "context": "Authentication middleware causing 842 updates vs 6 inserts on users table"
  },
  
  "work_phases": {
    "phase_1_diagnosis": {
      "name": "Auth Code Analysis",
      "duration": "45 minutes",
      "files_to_analyze": [
        "backend/src/middleware/auth.ts",
        "backend/src/routes/auth.ts", 
        "backend/src/controllers/authController.ts",
        "backend/src/models/User.ts"
      ],
      "objectives": [
        "Identify where last_login updates occur",
        "Check if update happens on every authenticated request",
        "Document current auth flow"
      ],
      "commands": [
        "cd /home/veranoby/sports-bets",
        "find backend/src -name '*.ts' -exec grep -l 'last_login' {} \\;",
        "find backend/src -name '*.ts' -exec grep -l 'UPDATE.*users' {} \\;",
        "grep -r 'last_login' backend/src/ --include='*.ts'"
      ]
    },

    "phase_2_fix_implementation": {
      "name": "Optimize Auth Updates", 
      "duration": "90 minutes",
      "strategy": "Only update last_login on actual login, not every request",
      "changes_required": [
        "Modify auth middleware to NOT update last_login on token validation",
        "Ensure last_login only updates on POST /auth/login",
        "Add session-based update throttling (max 1 update per hour)"
      ],
      "performance_target": "Reduce users table updates by 95%"
    },

    "phase_3_testing": {
      "name": "Validation & Testing",
      "duration": "30 minutes", 
      "tests": [
        "Test login flow still updates last_login",
        "Test authenticated requests do NOT update last_login",
        "Verify pg_stat_user_tables improvements",
        "Test multiple users concurrent login"
      ],
      "validation_sql": "SELECT n_tup_upd, n_tup_ins FROM pg_stat_user_tables WHERE relname = 'users'"
    },

    "phase_4_monitoring": {
      "name": "Performance Verification",
      "duration": "15 minutes",
      "metrics": [
        "Monitor update ratio after fix deployment", 
        "Verify ratio drops to ~1:1 (1 update per login)",
        "Test system performance improvement"
      ]
    }
  },

  "critical_files": {
    "backend/src/middleware/auth.ts": "Primary suspect - likely updates last_login on every request",
    "backend/src/routes/auth.ts": "Login endpoint - should be only place updating last_login",
    "backend/src/models/User.ts": "Check for hooks that auto-update last_login"
  },

  "expected_findings": {
    "probable_issue": "auth middleware calls user.update({last_login: new Date()}) on token validation",
    "correct_behavior": "last_login should only update on successful POST /auth/login",
    "performance_gain": "95% reduction in users table write operations"
  },

  "implementation_strategy": {
    "approach": "Conservative fix with session throttling",
    "backup": "Store current auth middleware before changes",
    "rollback_plan": "Revert to current version if login breaks",
    "monitoring": "Track pg_stat_user_tables for update reduction"
  },

  "database_context": {
    "current_stats": {
      "users_updates": 842,
      "users_inserts": 6, 
      "ratio": "140:1 (critical)",
      "other_tables": "0:1 (normal)"
    },
    "target_stats": {
      "expected_ratio": "1-2:1",
      "acceptable_threshold": "Max 10:1"
    }
  },

  "success_criteria": {
    "primary": "users table update ratio drops below 10:1",
    "secondary": "Login functionality preserved",
    "tertiary": "System performance improvement measurable"
  },

  "brain_updates_required": {
    "backlog.json": "Mark critical_database_issue as resolved",
    "sdd_system.json": "Update performance_optimizations with auth fix"
  }
}