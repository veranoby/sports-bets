{
  "meta": {
    "strategy": "MICRO_TASK_SERIES_ULTRA_SPECIFIC",
    "total_tasks": 8,
    "estimated_total_time": "40-60 minutes",
    "loop_prevention": "Hard limits on everything"
  },
  "current_status": {
    "error_count": "426 problems (397 errors, 29 warnings)",
    "manual_progress": "Reduced 435→426 in 5 minutes (proves strategy works)"
  },
  "task_1": {
    "name": "Remove Unused Variables - Batch 1",
    "time_limit": "5 minutes HARD STOP",
    "files": [
      "src/pages/user/Profile.tsx",
      "src/pages/user/Wallet.tsx"
    ],
    "scope": "ONLY remove unused variable declarations",
    "forbidden": ["Fix any types", "Add functionality", "Refactor", "Add debugging"],
    "target": "Remove 8-12 unused variable errors",
    "commit_msg": "Micro 1: Remove unused vars from user pages"
  },
  "task_2": {
    "name": "Remove Unused Variables - Batch 2",
    "time_limit": "5 minutes HARD STOP",
    "files": [
      "src/components/forms/UserProfileForm.tsx",
      "src/components/forms/VenueForm.tsx"
    ],
    "scope": "ONLY remove unused variable declarations",
    "target": "Remove 6-10 unused variable errors",
    "commit_msg": "Micro 2: Remove unused vars from form components"
  },
  "task_3": {
    "name": "Remove Unused Variables - Batch 3",
    "time_limit": "5 minutes HARD STOP",
    "files": [
      "src/components/admin/CreateUserModal.tsx",
      "src/components/admin/CreateOperatorModal.tsx"
    ],
    "scope": "ONLY remove unused variable declarations",
    "target": "Remove 6-8 unused variable errors",
    "commit_msg": "Micro 3: Remove unused vars from admin modals"
  },
  "task_4": {
    "name": "Fix Simple Any Types - Services Only",
    "time_limit": "8 minutes HARD STOP",
    "files": [
      "src/services/kushkiService.ts"
    ],
    "scope": "ONLY replace 'any' with 'unknown' or basic types",
    "method": "Change 'any' to 'unknown' - NO interface creation",
    "target": "Fix 4-6 any type errors",
    "commit_msg": "Micro 4: Replace any with unknown in kushkiService"
  },
  "task_5": {
    "name": "Fix Simple Any Types - Streaming Service",
    "time_limit": "8 minutes HARD STOP",
    "files": [
      "src/services/streamingService.ts"
    ],
    "scope": "ONLY replace 'any' with 'unknown' or Error type",
    "method": "Change 'error: any' to 'error: unknown' - NO complex interfaces",
    "target": "Fix 4-6 any type errors",
    "commit_msg": "Micro 5: Replace any with unknown in streamingService"
  },
  "task_6": {
    "name": "Remove Unused Imports - Batch 1",
    "time_limit": "5 minutes HARD STOP",
    "files": [
      "src/pages/user/Subscriptions.tsx",
      "src/pages/user/Venues.tsx"
    ],
    "scope": "ONLY remove unused import statements",
    "target": "Remove 8-12 unused import errors",
    "commit_msg": "Micro 6: Remove unused imports from user pages"
  },
  "task_7": {
    "name": "Remove Unused Imports - Batch 2",
    "time_limit": "5 minutes HARD STOP",
    "files": [
      "src/components/admin/EditEventModal.tsx",
      "src/components/admin/EditVenueModal.tsx"
    ],
    "scope": "ONLY remove unused import statements",
    "target": "Remove 6-10 unused import errors",
    "commit_msg": "Micro 7: Remove unused imports from admin modals"
  },
  "task_8": {
    "name": "Final Quick Cleanup",
    "time_limit": "8 minutes HARD STOP",
    "files": [
      "src/tests/utils/testUtils.tsx"
    ],
    "scope": "Remove unused vars AND exports causing fast-refresh warnings",
    "target": "Fix 5-8 mixed errors",
    "commit_msg": "Micro 8: Final cleanup testUtils"
  },
  "execution_rules": {
    "one_task_at_time": "Complete task N before starting task N+1",
    "hard_timeout": "STOP immediately when time limit reached",
    "commit_immediately": "git commit after each task completion",
    "no_perfectionism": "Accept 'good enough' solutions",
    "report_progress": "Report error count after each task",
    "stop_on_build_break": "If TypeScript compilation fails, revert and commit partial progress"
  },
  "loop_prevention_protocol": {
    "if_stuck_on_error": "Skip that specific error and move to next",
    "if_cascading_errors": "Revert last change and commit partial progress",
    "if_timeout_reached": "Commit whatever progress made and STOP",
    "if_compilation_fails": "Revert to last working state and commit",
    "max_iterations_per_file": "3 edit attempts maximum per file"
  },
  "success_metrics": {
    "expected_reduction": "426 problems → 350-370 problems (15-20% improvement)",
    "time_efficiency": "8 tasks × 6 minutes avg = 48 minutes total",
    "commit_frequency": "8 commits with incremental progress",
    "build_stability": "TypeScript compilation must remain working"
  },
  "next_steps_after_completion": {
    "report_to_claude": "Report final error count and time taken",
    "identify_remaining": "List most common remaining error types",
    "create_next_series": "Generate next micro-task series if needed"
  }
}